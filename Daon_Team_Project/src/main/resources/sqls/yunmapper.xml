<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.min.edu.model.YunDaon_DaoImpl.yunwoo">

	<!-- 객관식 문제 조회 -->
	<select id="subGaekallsel" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT DISTINCT(EXA_CODE) FROM D_EXAM 
   			JOIN D_CUREXA USING(EXA_CODE)
   			JOIN D_CURRICULUM USING(CUR_CODE)
      			WHERE SUB_CODE = #{sub_code} AND EXA_MEAN='S'		
	</select>
	<select id="gaekListsel" parameterType="java.lang.String" resultType="examselectDto">
		SELECT EXA_CODE, CONTENT, FILENAME, COR_ANSWER, WRO_ONE, WRO_TWO, WRO_THREE 
			FROM (SELECT EXA_CODE, CONTENT, FILENAME, COR_ANSWER, WRO_ONE, WRO_TWO, WRO_THREE, ROWNUM RN FROM D_EXAMSELECT
                           WHERE EXA_CODE IN
             <foreach close=")" separator="," open="(" item="exa_code" collection="exa_code_">#{exa_code}</foreach>
             ) WHERE RN BETWEEN #{startList} AND #{endList}
	</select>
	
	<!-- 서술형 문제 조회 -->
	<select id="subSesulallsel" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT DISTINCT(EXA_CODE) FROM D_EXAM 
   			JOIN D_CUREXA USING(EXA_CODE)
   			JOIN D_CURRICULUM USING(CUR_CODE)
      			WHERE SUB_CODE = #{sub_code} AND EXA_MEAN='D'	
	</select>
	
	<select id="sesulListsel" parameterType="java.lang.String" resultType="examdescDto">
		SELECT EXA_CODE, CONTENT, FILENAME, STANDARD
        	FROM(SELECT EXA_CODE, CONTENT, FILENAME, STANDARD, ROWNUM RN FROM D_EXAMDESCRIPTIVE
                    WHERE EXA_CODE IN
             <foreach close=")" separator="," open="(" item="exa_code" collection="exa_code_">#{exa_code}</foreach>
             ) WHERE RN BETWEEN #{startList} AND #{endList}
	</select>
	
	<!-- 포트폴리오 문제 조회 -->
	<select id="subPoexaallsel" parameterType="java.util.Map" resultType="java.lang.String">
	SELECT DISTINCT(EXA_CODE) FROM D_EXAM 
   			JOIN D_CUREXA USING(EXA_CODE)
   			JOIN D_CURRICULUM USING(CUR_CODE)
      			WHERE SUB_CODE = #{sub_code} AND EXA_MEAN='P'		
	</select>
	
	<!-- searchdes2랑 똑같은 거 기분탓입니다. -->
	<select id="popolListsel" parameterType="java.lang.String" resultType="examdescDto">
		SELECT EXA_CODE, CONTENT, FILENAME, STANDARD
        	FROM(SELECT EXA_CODE, CONTENT, FILENAME, STANDARD, ROWNUM RN FROM D_EXAMDESCRIPTIVE
                     WHERE EXA_CODE IN
             <foreach close=")" separator="," open="(" item="exa_code" collection="exa_code_">#{exa_code}</foreach>
             ) WHERE RN BETWEEN #{startList} AND #{endList}
	</select>
	
    <!-- 복사된 문제를 시험에 입력 -->
    <insert id="copyinsert" parameterType="curexaDto">
    INSERT INTO D_CUREXA
    (CUREXA_CODE, CUR_CODE, EXA_CODE, ALLOT)
    VALUES(CUREXA_SEQ.NEXTVAL, #{cur_code}, #{exa_code}, '0')
    </insert>
    
    <!--문제를 시험에서 삭제-->
    <delete id="curexaDelete" parameterType="curexaDto">
    DELETE FROM D_CUREXA WHERE EXA_CODE=#{exa_code} AND CUR_CODE = #{cur_code}
    </delete>
    
    <!--초기시험점수가 0점인 것을 위해 만들어 둔 연결 제거  	-->
    <delete id="deldefault" parameterType="java.lang.String">
    DELETE FROM D_CUREXA WHERE EXA_CODE='1' AND CUR_CODE = #{cur_code}
    </delete>
    				
    <!--객관식 유형 문제 추가-->
    <insert id="addExagaek">
    INSERT INTO D_EXAM(EXA_CODE, EXA_MEAN) VALUES(EXAM_SEQ.NEXTVAL, 'S')
    </insert>
    
    <!--객관식 문제의 내용 추가-->
    <insert id="gaekExacontents" parameterType="examselectDto">
    INSERT INTO D_EXAMSELECT
    (SEQ, EXA_CODE, CONTENT, WRO_ONE, WRO_TWO, WRO_THREE, COR_ANSWER, FILENAME)
    VALUES(EXAM_SEQ.CURRVAL, EXAM_SEQ.CURRVAL, #{content}, #{wro_one}, #{wro_two}, #{wro_three}, #{cor_answer}, #{filename})
    </insert>
    
    <!--추가된 문제를 시험에 추가-->
    <insert id="curGaekexa" parameterType="curexaDto">
    INSERT INTO D_CUREXA
    (CUREXA_CODE, CUR_CODE, EXA_CODE, ALLOT)
    VALUES(CUREXA_SEQ.NEXTVAL, #{cur_code}, EXAM_SEQ.CURRVAL, '0')
    </insert>
    
    <!--서술형 유형 문제 추가-->
    <insert id="addExasesul">
    INSERT INTO D_EXAM(EXA_CODE, EXA_MEAN) VALUES(EXAM_SEQ.NEXTVAL, 'D')
    </insert>
    
    <!--서술형 문제의 내용 추가-->
    <insert id="sesulExacontents" parameterType="examdescDto">
    INSERT INTO D_EXAMDESCRIPTIVE (SEQ, EXA_CODE, CONTENT, STANDARD, FILENAME) 
    VALUES(EXAM_SEQ.CURRVAL, EXAM_SEQ.CURRVAL, #{content}, #{standard}, #{filename})
    </insert>
    
    <!--추가된 문제를 시험에 추가-->
    <insert id="curSesulexa" parameterType="curexaDto">
    INSERT INTO D_CUREXA
    (CUREXA_CODE, CUR_CODE, EXA_CODE, ALLOT)
    VALUES(CUREXA_SEQ.NEXTVAL, #{cur_code}, EXAM_SEQ.CURRVAL, '0')
    </insert>
    
    <!--포폴형 유형 문제 추가-->
    <insert id="addExapopol">
    INSERT INTO D_EXAM(EXA_CODE, EXA_MEAN) VALUES(EXAM_SEQ.NEXTVAL, 'P')
    </insert>
    
    <!--포폴형 문제의 내용 추가-->
    <insert id="popolExacontents" parameterType="examdescDto">
    INSERT INTO D_EXAMDESCRIPTIVE (SEQ, EXA_CODE, CONTENT, STANDARD, FILENAME) 
    VALUES(EXAM_SEQ.CURRVAL, EXAM_SEQ.CURRVAL, #{content}, #{standard}, #{filename})
    </insert>
	
	<!--추가된 문제를 시험에 추가-->
	<insert id="curPopolexa" parameterType="curexaDto">
    INSERT INTO D_CUREXA
    (CUREXA_CODE, CUR_CODE, EXA_CODE, ALLOT)
    VALUES(CUREXA_SEQ.NEXTVAL, #{cur_code}, EXAM_SEQ.CURRVAL, #{allot})
    </insert>
    
    <!-- 파일 업로드 시 파일의 이름 정하는 코드 -->
    <select id="filename" resultType="java.lang.String">
    SELECT FILESEQ.NEXTVAL FROM DUAL
    </select>
    
    
    <select id="sihumExaSList" parameterType="java.lang.String" resultType="selectselDto">
    SELECT CUREXA_CODE, EXA_CODE,CONTENT,FILENAME, COR_ANSWER,WRO_ONE,WRO_TWO,WRO_THREE 
    	FROM
    		(SELECT EXA_CODE,CONTENT,FILENAME, COR_ANSWER,WRO_ONE,WRO_TWO,WRO_THREE, ROWNUM RN FROM D_EXAMSELECT) JOIN 
    		(SELECT CUREXA_CODE, EXA_CODE FROM D_CUREXA WHERE CUR_CODE=#{cur_code})
    			USING(EXA_CODE)
    		JOIN
			(SELECT EXA_CODE, EXA_MEAN FROM D_EXAM)
			USING(EXA_CODE)
				WHERE EXA_MEAN = 'S' ORDER BY RN
    </select>
    
    
    <select id="sihumExaDList" parameterType="java.lang.String" resultType="descportselDto">
    SELECT CUREXA_CODE, EXA_CODE,CONTENT,FILENAME, STANDARD 
    	FROM    		
    		(SELECT EXA_CODE,CONTENT,FILENAME, STANDARD, ROWNUM RN FROM D_EXAMDESCRIPTIVE)
    		JOIN 
    		(SELECT CUREXA_CODE, EXA_CODE FROM D_CUREXA WHERE CUR_CODE=#{cur_code})
    			USING(EXA_CODE)
    		JOIN
			(SELECT EXA_CODE, EXA_MEAN FROM D_EXAM)
			USING(EXA_CODE)
				WHERE EXA_MEAN = 'D' 
					ORDER BY RN
    </select>
    
    <select id="sihumExaPList" parameterType="java.lang.String" resultType="descportselDto">
    SELECT CUREXA_CODE, EXA_CODE,CONTENT,FILENAME, STANDARD 
    	FROM    		
    		(SELECT EXA_CODE,CONTENT,FILENAME, STANDARD, ROWNUM RN FROM D_EXAMDESCRIPTIVE)
    		JOIN 
    		(SELECT CUREXA_CODE, EXA_CODE FROM D_CUREXA WHERE CUR_CODE=#{cur_code})
    			USING(EXA_CODE)
    		JOIN
			(SELECT EXA_CODE, EXA_MEAN FROM D_EXAM)
			USING(EXA_CODE)
				WHERE EXA_MEAN = 'P' 
					ORDER BY RN
    </select>
    
    <update id="jumsuSet" parameterType="curexaDto">
    UPDATE D_CUREXA SET ALLOT=#{allot} WHERE CUREXA_CODE=#{curexa_code}
    </update>
    
    
	
</mapper>
